generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_VERCEL_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_VERCEL_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  email     String   @unique
  createdAt DateTime @default(now())
  curator   Curator?
  admin     Admin?
  UserFeedbackOnJobs UserFeedbackOnJobs[]
}

model Curator {
  id   Int    @id @default(autoincrement())
  name String @unique
  User User @relation(fields: [name], references: [name])
  profile String @default("")
  jobsPosted Jobs[]
}

model Jobs {
   id   Int    @id @default(autoincrement())
   title String
   company String
   body String
   blob String @unique
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now())
   curator  Curator  @relation(fields: [curatorId], references: [id])
   curatorId Int
   isOpen Boolean @default(true)
   UserFeedbackOnJobs UserFeedbackOnJobs[]
}

model Admin {
  id   Int    @id @default(autoincrement())
  name String @unique
  User User @relation(fields: [name], references: [name])
  isSuperAdmin Boolean @default(false)
}

model UserFeedbackOnJobs {
  id   Int    @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  job Jobs @relation(fields: [jobId], references: [id])
  jobId Int
  isOpen Boolean?
  isLegit Boolean?
  isInternational Boolean?
  @@unique([userId, jobId])
}
